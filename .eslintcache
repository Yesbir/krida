[{"D:\\Projects\\krida\\src\\index.js":"1","D:\\Projects\\krida\\src\\App.js":"2","D:\\Projects\\krida\\src\\reducers\\index.jsx":"3","D:\\Projects\\krida\\src\\components\\Dividers\\VerticalDivider.jsx":"4","D:\\Projects\\krida\\src\\components\\Login\\Login.jsx":"5","D:\\Projects\\krida\\src\\components\\NavBar\\NavBar.jsx":"6","D:\\Projects\\krida\\src\\components\\SideBar\\SideBar.jsx":"7"},{"size":789,"mtime":1612280963764,"results":"8","hashOfConfig":"9"},{"size":545,"mtime":1612388677605,"results":"10","hashOfConfig":"9"},{"size":104,"mtime":1612361905840,"results":"11","hashOfConfig":"9"},{"size":661,"mtime":1611902536715,"results":"12","hashOfConfig":"9"},{"size":2281,"mtime":1612388583136,"results":"13","hashOfConfig":"9"},{"size":1634,"mtime":1611907958821,"results":"14","hashOfConfig":"9"},{"size":1635,"mtime":1611907791778,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1w1ub86",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"18"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"D:\\Projects\\krida\\src\\index.js",[],["32","33"],"D:\\Projects\\krida\\src\\App.js",[],"D:\\Projects\\krida\\src\\reducers\\index.jsx",[],"D:\\Projects\\krida\\src\\components\\Dividers\\VerticalDivider.jsx",[],"D:\\Projects\\krida\\src\\components\\Login\\Login.jsx",[],"D:\\Projects\\krida\\src\\components\\NavBar\\NavBar.jsx",["34"],"import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport { AccountCircle, SettingsPowerRounded } from \"@material-ui/icons\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n}));\r\n\r\nexport default function NavBar(props) {\r\n  const classes = useStyles();\r\n\r\n  const renderLoginButton = (isLogin) => {\r\n    if (isLogin) {\r\n      return (\r\n        <IconButton edge=\"end\" color=\"inherit\" aria-label=\"account\">\r\n          <AccountCircle />\r\n        </IconButton>\r\n      );\r\n    } else {\r\n      return <Button color=\"inherit\">Login</Button>;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <IconButton\r\n            edge=\"start\"\r\n            className={classes.menuButton}\r\n            color=\"inherit\"\r\n            aria-label=\"menu\"\r\n            onClick={() => {\r\n              props.onMenuClickHandler(true);\r\n            }}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            Krida\r\n          </Typography>\r\n          {renderLoginButton(false)}\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}\r\n","D:\\Projects\\krida\\src\\components\\SideBar\\SideBar.jsx",[],{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","severity":1,"message":"40","line":9,"column":25,"nodeType":"41","messageId":"42","endLine":9,"endColumn":45},"no-native-reassign",["43"],"no-negated-in-lhs",["44"],"no-unused-vars","'SettingsPowerRounded' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]